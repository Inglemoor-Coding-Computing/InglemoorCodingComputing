@inject NavigationManager NavigationManager
@inject IUserStateService UserStateService
@implements IDisposable

<nav class="py-2">
    <div class="px-2 mx-auto max-w-7xl sm:px-6 lg:px-8">
        <div class="relative flex items-center justify-between min-h-16">
            <div class="flex items-center justify-start justify-center flex-1 sm:items-stretch md:justify-center">
                <div class="my-auto mr-2 grow-0">
                    <div class="flex items-center">
                        <img class="h-10 hidden sm:block" src="logo.webp" style="aspect-ratio: 1028 / 927" alt="Inglemoor Coding Computing Club Logo">
                        <button aria-label="Open Navigation Menu" class="flex-none sm:hidden text-slate-900 dark:text-white px-1" @onclick="() => navOpen = true">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        </button>
                        <a href="/" class="mx-4 font-mono text-2xl font-extrabold text-transparent break-words bg-clip-text bg-gradient-to-r from-amber-400 dark:from-amber-300 to-red-800 dark:to-red-700">Inglemoor Coding & Computing Club</a>
                    </div>
                </div>
                <div class="hidden my-auto sm:block sm:ml-4">
                    <div class="flex space-x-4">
                        <NavLink href="meetings" ActiveClass="!border-indigo-500" class="px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Meetings</NavLink>
                        <NavLink href="resources" ActiveClass="!border-indigo-500" class="px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Resources</NavLink>
                        <AuthorizeView>
                            <NavLink href="groups" ActiveClass="!border-indigo-500" class="px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Groups</NavLink>
                        </AuthorizeView>
                        <AuthorizeView Roles="Admin">
                            <NavLink href="dashboard" ActiveClass="!border-indigo-500" class="px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Dashboard</NavLink>
                        </AuthorizeView>
                    </div>
                </div>
                <ThemeToggle/>
                <div class="hidden h-12 my-auto ml-4 space-x-2 font-semibold sm:flex flex-nowrap">
                    <AuthorizeView>
                        <NotAuthorized>
                            <a href="authentication/login" class="inline-flex items-center px-3 py-1 text-indigo-500 border-2 border-indigo-400 whitespace-nowrap rounded-xl hover:border-transparent hover:shadow-lg hover:shadow-indigo-300/50 hover:bg-indigo-500 hover:text-white">Sign in</a>
                            <a href="authentication/register" class="inline-flex items-center px-3 py-1 text-white bg-indigo-500 whitespace-nowrap rounded-xl hover:shadow-lg hover:shadow-indigo-500/50">Sign up</a>
                        </NotAuthorized>
                        <Authorized>
                            <a class="inline-flex items-center text-indigo-500 whitespace-nowrap hover:underline" href="/profile">
                                Welcome, @firstName
                            </a>
                            <LogoutButton Class="inline-flex items-center px-3 py-1 text-white bg-indigo-500 whitespace-nowrap rounded-xl hover:shadow-lg hover:shadow-indigo-500/50">Sign out</LogoutButton>
                        </Authorized>
                    </AuthorizeView>

                </div>
            </div>
            <!-- Mobile menu, show/hide based on menu state. -->
            @if (navOpen)
            {
                <div class="absolute w-full h-full sm:hidden">
                    <div class="flex flex-col px-4 pt-2 pb-3 space-y-1 rounded-lg bg-gray-300/95 dark:bg-gray-700/90 ">
                        <button class="block pt-2 text-slate-900 dark:text-white" @onclick="() => navOpen = false" aria-label="Close Navigation Menu">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                        <NavLink href="meetings" ActiveClass="!border-indigo-500" class="block px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Meetings</NavLink>
                        <NavLink href="resources" ActiveClass="!border-indigo-500" class="block px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Resources</NavLink>
                        <AuthorizeView>
                            <NavLink href="groups" ActiveClass="!border-indigo-500" class="block px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Groups</NavLink>
                        </AuthorizeView>
                        <AuthorizeView Roles="Admin">
                            <NavLink href="dashboard" ActiveClass="!border-indigo-500" class="block px-2 py-2 text-base font-semibold transition duration-150 border-b-4 border-transparent text-slate-900 dark:text-slate-300 hover:border-indigo-500">Dashboard</NavLink>
                        </AuthorizeView>
                        <div class="flex pt-2 space-x-2">
                            <AuthorizeView>
                                <NotAuthorized>
                                    <a href="authentication/login" class="inline-flex items-center px-3 py-1 text-indigo-500 bg-white border-2 border-indigo-400 whitespace-nowrap rounded-xl hover:border-transparent hover:shadow-lg hover:shadow-indigo-300/50 hover:bg-indigo-500 hover:text-gray-300 dark:bg-gray-700">Sign in</a>
                                    <a href="authentication/register" class="inline-flex items-center px-3 py-1 text-white bg-indigo-500 whitespace-nowrap rounded-xl hover:shadow-lg hover:shadow-indigo-500/50">Sign up</a>
                                </NotAuthorized>
                                <Authorized>
                                    <a class="inline-flex items-center text-indigo-500 whitespace-nowrap hover:underline" href="/profile">
                                        Welcome, @firstName
                                    </a>
                                    <LogoutButton Class="inline-flex items-center px-3 py-1 text-white bg-indigo-500 whitespace-nowrap rounded-xl hover:shadow-lg hover:shadow-indigo-500/50">Sign out</LogoutButton>
                                </Authorized>
                            </AuthorizeView>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</nav>

@code {
    private bool navOpen;
    private string? firstName;
    private async void OnLocationChanged(object? _, LocationChangedEventArgs __)
    {
        navOpen = false;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            NavigationManager.LocationChanged += OnLocationChanged;
            firstName = (await UserStateService.CurrentAsync())?.FirstName;
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose() =>
        NavigationManager.LocationChanged -= OnLocationChanged;

}
