@inject IUserStateService UserStateService
@implements IDisposable

<div class="w-70 h-full p-2 dark:bg-zinc-900 border-r border-gray-300 dark:border-transparent">
    <div class="flex flex-col space-y-3 flex-grow h-full">
        <div class="flex flex-col flex-grow space-y-4 text-slate-900 dark:text-slate-200">
            <div class="flex">
                <a href="/" class="flex-shrink-0 flex items-center">
                    <img class="h-8 w-auto" src="/logo.webp" alt="Inglemoor Coding Computing club">
                    <div class="mx-4 font-extrabold text-xl font-mono text-transparent bg-clip-text bg-gradient-to-r from-amber-400 dark:from-amber-300 to-red-800 dark:to-red-700">Inglemoor CCC</div>
                </a>
                <ThemeToggle/>
            </div>
            <div class="flex flex-col space-y-3 px-2">
                <NavLink Match="NavLinkMatch.All" ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard">Dashboard</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard/meetings">Meetings</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard/users">Users</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard/resources">Resources</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard/announcements">Announcements</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="py-2 px-3 w-60 rounded-lg" href="/dashboard/pages">Pages</NavLink>
            </div>
        </div>
        @if (user is not null)
        {
            <div class="flex justify-around bg-gray-100 dark:bg-gray-800 px-3 py-2 rounded-lg text-indigo-500 font-semibold">
                <div>
                    @user.FirstName @user.LastName<br/>@user.StudentNumber
                </div>
                <a href="authentication/logout" class="inline-flex items-center whitespace-nowrap rounded-xl bg-indigo-500 hover:shadow-lg hover:shadow-indigo-500/50 px-3 py-1 text-white">Sign out</a>
            </div>
        }
    </div>
</div>

@code {
    private AppUser? user;

    private async void UserUpdated(object? _, AppUser? appUser)
    {
        user = appUser;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        user = await UserStateService.CurrentAsync();
        UserStateService.Updated += UserUpdated;
    }

    public void Dispose()
    {
        UserStateService.Updated -= UserUpdated;
    }
}