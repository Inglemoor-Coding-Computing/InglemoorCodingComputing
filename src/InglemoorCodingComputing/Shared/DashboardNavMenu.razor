@inject IUserStateService UserStateService
@implements IDisposable

<div class="h-full p-2 border-r border-gray-300 w-70 dark:bg-zinc-900 dark:border-transparent">
    <div class="flex flex-col flex-grow h-full space-y-3">
        <div class="flex flex-col flex-grow space-y-4 text-slate-900 dark:text-slate-200">
            <div class="flex">
                <a href="/" class="flex items-center flex-shrink-0">
                    <img class="w-auto h-8" src="/logo.webp" alt="Inglemoor Coding Computing club">
                    <div class="mx-4 font-mono text-xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-amber-400 dark:from-amber-300 to-red-800 dark:to-red-700">Inglemoor CCC</div>
                </a>
                <ThemeToggle/>
            </div>
            <div class="flex flex-col px-2 space-y-3">
                <NavLink Match="NavLinkMatch.All" ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard">Dashboard</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/meetings">Meetings</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/users">Users</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/resources">Resources</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/url-shortener">URL Shortener</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/pages">Pages</NavLink>
                <NavLink ActiveClass="!bg-indigo-500/75" class="px-3 py-2 rounded-lg w-60" href="/dashboard/approved-emails">Approved Emails</NavLink>
            </div>
        </div>
        @if (user is not null)
        {
            <div class="flex justify-around px-3 py-2 font-semibold text-indigo-500 bg-gray-100 rounded-lg dark:bg-gray-800">
                <div>
                    @user.FirstName @user.LastName<br/>@user.StudentNumber
                </div>
                <a href="authentication/logout" class="inline-flex items-center px-3 py-1 text-white bg-indigo-500 whitespace-nowrap rounded-xl hover:shadow-lg hover:shadow-indigo-500/50">Sign out</a>
            </div>
        }
    </div>
</div>

@code {
    private AppUser? user;

    private async void UserUpdated(object? _, AppUser? appUser)
    {
        user = appUser;
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        user = await UserStateService.CurrentAsync();
        UserStateService.Updated += UserUpdated;
    }

    public void Dispose()
    {
        UserStateService.Updated -= UserUpdated;
    }
}