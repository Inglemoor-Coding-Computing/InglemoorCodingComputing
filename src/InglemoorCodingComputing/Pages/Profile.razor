@page "/profile"
@inject IUserStateService UserStateService
@inject IUserAuthService UserAuthService
@attribute [Authorize]

<PageTitle>Profile</PageTitle>

@if (user is not null)
{
    <div class="flex flex-col pt-2 mx-auto space-y-3 sm:w-3/4 text-slate-900 dark:text-white">
        <h2 class="text-3xl font-semibold text-center">@user?.FirstName @user?.LastName</h2>
    
        <div class="mx-auto">
            <h4 class="text-lg">User info:</h4>
            <div class="flex flex-col inline-block p-4 mt-2 space-y-1 border-2 border-indigo-500 rounded-lg w-fit">
                <div>
                    <span class="font-semibold">
                        Name:
                    </span>
                    @user?.FirstName @user?.LastName
                    
                    @if (user?.StudentNumber is not null)
                    {
                        <span class="font-sm"> (nsd-@user?.StudentNumber)</span>
                    }
                </div>
                <div>
                    <span class="font-semibold">
                        Email:
                    </span>
                    @user?.Email
                </div>
                <div>
                    <span class="font-semibold">Password: </span>
                    <a href="/authentication/change-password" class="text-indigo-500 hover:underline">Change Password</a>
                </div>
                <div>
                    <span class="font-semibold">Grade: </span>
                    @AppUser.GraduationYearToGradeLevel(user?.GraduationYear ?? 0)
                    (class of @user?.GraduationYear)
                </div>
            </div>
        </div>
    </div>
}

@code {
    private AppUser? user;
    protected override async Task OnInitializedAsync()
    {
        user = await UserStateService.CurrentAsync();
        await InvokeAsync(StateHasChanged);
    }
}
