@page "/diagnostics/time"
@inject TimeZoneService TimeZoneService
@using System.Threading;
@attribute [Authorize(Roles="Admin")]

<AdminCheck />
<PageTitle>Time Diagnostic</PageTitle>

<div class="flex flex-col justify-center text-slate-900 dark:text-white text-center">
    <h2 class="text-2xl font-bold">Timing Diagnostic</h2>
    <p class="text-lg">UTC: @utc</p>
    <p class="text-lg">Server: @server</p>
    <p class="text-lg">Local: @local</p>
</div>

@code {
    private string? utc;
    private string? server;
    private string? local;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            using PeriodicTimer periodicTimer = new(TimeSpan.FromMilliseconds(1000));
            while (await periodicTimer.WaitForNextTickAsync())
            {
                utc = DateTime.UtcNow.ToLongTimeString();
                server = DateTime.Now.ToLongTimeString();
                local = (await TimeZoneService.GetLocalDateTime(DateTime.UtcNow)).DateTime.ToLongTimeString();
                await InvokeAsync(StateHasChanged);
            }
        }
    }
}
