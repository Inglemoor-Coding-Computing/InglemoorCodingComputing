name: Build and deploy .NET Core application to Web App inglemoorccc
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: inglemoorccc
  AZURE_WEBAPP_PACKAGE_PATH: InglemoorCodingComputing/publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: src/InglemoorCodingComputing
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Setup tailwind
      run: |
        npm install -D tailwindcss
        npm install -D @tailwindcss/typography
    - name: Tailwindcss
      run: npx tailwindcss -c "${{ env.WORKING_DIRECTORY }}/tailwind.config.js" -i "${{ env.WORKING_DIRECTORY }}/Styles/app.css" -o "${{ env.WORKING_DIRECTORY }}/wwwroot/tailwind.css" --minify
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Deploy to Azure WebApp
      if: ${{ github.event_name == 'push' }}
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.inglemoorccc_FFFF }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Compress package
      if: ${{ github.event_name == 'push' }}
      run: dotnet fsi scripts/deploy.fsx
    - name: Deploy to production
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: "package.zip"
        target: "../../var/app/"

    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
